[
  {
    "type": "function",
    "function": {
      "name": "similarity_search",
      "description": "Performs a similarity search on code snippets based on a query, returning the top-k most similar snippets. Please, generally speaking we use k = 3, 5, 10",
      "parameters": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "The query to compare against the code snippets."
          },
          "k": {
            "type": "integer",
            "default": 5,
            "description": "The number of top results to return based on similarity scores."
          }
        },
        "required": ["query", "k"]
      },
      "returns": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "index": {
              "type": "integer",
              "description": "The index of the code snippet in the source database."
            },
            "similarity": {
              "type": "number",
              "description": "The similarity score between the query and the snippet."
            },
            "path": {
              "type": "string",
              "description": "The file path where the code snippet is located."
            },
            "function_name": {
              "type": "string",
              "description": "The name of the function in the code snippet."
            },
            "snippet": {
              "type": "string",
              "description": "The code snippet itself."
            }
          },
          "required": ["index", "similarity", "path", "function_name", "snippet"]
        },
        "description": "A list of dictionaries, each representing a code snippet and its associated data returned based on the similarity search."
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "search_by_keywords",
      "description": "Performs a filtered similarity search on code snippets based on a user-specified query and filters, returning the top-k most similar snippets.",
      "parameters": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "The query to compare against the code snippets."
          },
          "k": {
            "type": "integer",
            "default": 5,
            "description": "The number of top results to return based on similarity scores."
          },
          "filters": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "A list of keyword filters to apply to the code snippets before performing the similarity search."
          }
        },
        "required": ["query","k", "filters"]
      },
      "returns": {
        "type": "object",
        "description": "A dictionary of top-k similar snippets, each with associated metadata.",
        "additionalProperties": {
          "type": "object",
          "properties": {
            "index": {
              "type": "integer",
              "description": "The index of the code snippet in the source database."
            },
            "similarity": {
              "type": "number",
              "description": "The similarity score between the query and the snippet."
            },
            "snippet": {
              "type": "string",
              "description": "The code snippet itself."
            },
            "path": {
              "type": "string",
              "description": "The file path where the code snippet is located."
            },
            "function_name": {
              "type": "string",
              "description": "The name of the function in the code snippet."
            }
          },
          "required": ["index", "similarity", "snippet", "path", "function_name"]
        }
      }
    }
  },
  {
    "type": "function",
    "function": {
      "name": "display_tree",
      "description": "Displays the tree structure of a specified directory up to a certain depth.",
      "parameters": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "description": "The path to the directory for which you want to display the tree structure."
          },
          "max_depth": {
            "type": "integer",
            "minimum": 1,
            "description": "The maximum depth of the directory tree to display."
          }
        },
        "required": ["path", "max_depth"]
      },
      "returns": {
        "type": "string",
        "description": "The output of the 'tree' command, displaying the directory structure. If an error occurs, it contains the error message."
      }
    }
  }
  
]
